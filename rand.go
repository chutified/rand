// Package rand provides a true random generator.
// The numbers are generated by a source, which is provided
// by a function from the crypto/rand. since
// the crypto/rand package has really weak and unfriendly interface,
// this package combines its capability of generating true random numbers
// with the functions which are provided in the math/rand,
// the generator of pseudo-random numbers.
//
// To achieve the true randomness, this package uses the Read function
// from the crypto/rand, which by default uses a system's getrandom(2)
// or /dev/urandom functions on Linux/FreeBSD, getentropy(2) on OpenBSD
// and /dev/urandom on other Unix-systems. On Windows it uses
// the CryptGenRandom API and on Wasm the Web Crypto API.
package rand

import (
	"math/rand"
)

// NewRand generates a new rand.Rand from the math/rand
// with a dynamic source.
//
// Rand implements all functions from the package math/rand package.
// All the math's pseudo-random generators are now true-RNG.
// Keep in mind, that some original methods,
// such as Seed(), does not work anymore.
//
// See: https://pkg.go.dev/math/rand?tab=doc#Rand
func NewRand() *rand.Rand {
	return rand.New(NewSource()) //nolint:gosec
}
